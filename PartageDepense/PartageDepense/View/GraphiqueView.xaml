<UserControl x:Class="PartageDepense.View.GraphiqueView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
             xmlns:vm="clr-namespace:PartageDepense.ViewModel"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             mc:Ignorable="d"
             xmlns:local="clr-namespace:PartageDepense.View"
             xmlns:res="clr-namespace:PartageDepense.Language">

    <UserControl.Resources>
        <!-- Convertisseur pour masquer/afficher des éléments en fonction d'une valeur booléenne. -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <!-- Convertisseur pour masquer/afficher un élément si une valeur est nulle. -->
        <local:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <!-- Convertisseur pour inverser une valeur booléenne -->
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </UserControl.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <!-- Ligne pour la sélection de l'activité. -->
            <RowDefinition Height="Auto"/>
            <!-- Ligne pour le choix du type de graphique. -->
            <RowDefinition Height="Auto"/>
            <!-- Ligne pour les filtres et le tri. -->
            <RowDefinition Height="Auto"/>
            <!-- Ligne principale pour afficher le graphique et les messages. -->
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Sélection activité -->
        <!-- Permet à l'utilisateur de choisir l'activité dont il souhaite visualiser les données. -->
        <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,0,10">
            <TextBlock x:Name="SelectActivityLabel" Text="Sélectionnez une activité :" VerticalAlignment="Center" Margin="0,0,8,0" FontWeight="Bold"/>
            <ComboBox ItemsSource="{Binding ListeActivites}" SelectedItem="{Binding ActiviteSelectionnee}" DisplayMemberPath="NomActivite" Width="200"/>
        </StackPanel>

        <!-- Choix type de graphique -->
        <!-- Permet à l'utilisateur de choisir d'afficher le graphique des soldes ou celui des dépenses. -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,0,0,10" VerticalAlignment="Center">
            <TextBlock x:Name="ChartTypeLabel" Text="Type de graphique :" VerticalAlignment="Center" Margin="0,0,8,0" FontWeight="Bold"/>
            <RadioButton x:Name="BalanceRadio" Content="Soldes par participant" GroupName="GraphType" IsChecked="{Binding IsSoldeSelected}" />
            <RadioButton x:Name="ExpenseRadio" Content="Dépenses par participant" GroupName="GraphType" IsChecked="{Binding IsDepenseSelected}" Margin="20,0,0,0"/>
        </StackPanel>

        <!-- Filtres et tri -->
        <Grid Grid.Row="2" Margin="0,0,0,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- Filtre par période -->
            <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="0,0,20,0">
                <TextBlock x:Name="PeriodLabel" Text="Période :" VerticalAlignment="Center" Margin="0,0,8,0" FontWeight="Bold"/>
                <DatePicker SelectedDate="{Binding DateDebut}" Width="120" Margin="0,0,8,0"/>
                <TextBlock x:Name="ToLabel" Text="Au " VerticalAlignment="Center" Margin="0,0,8,0" FontWeight="Bold"/>
                <DatePicker SelectedDate="{Binding DateFin}" Width="120"/>
            </StackPanel>

            <!-- Tri -->
            <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock x:Name="SortByLabel" Text="Trier par :" VerticalAlignment="Center" Margin="0,0,8,0" FontWeight="Bold"/>
                <ComboBox x:Name="SortComboBox" Width="120" Margin="0,0,8,0">
                    <ComboBoxItem x:Name="ValueSortItem" Content="Valeur" IsSelected="{Binding TriParValeur}"/>
                    <ComboBoxItem x:Name="NameSortItem" Content="Nom" IsSelected="{Binding TriParValeur, Converter={StaticResource InverseBooleanConverter}}"/>
                </ComboBox>
                <Rectangle Width="1" Height="24" Fill="Gray" Margin="8,0,8,0"/>
                <TextBlock x:Name="AscendingLabel" Text="Croissant:" VerticalAlignment="Center" Margin="0,0,8,0" FontWeight="Bold"/>
                <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}"
                              IsChecked="{Binding TriCroissant}"
                              ToolTip="Tri croissant/décroissant"
                              Margin="0,0,0,0"/>
            </StackPanel>
        </Grid>

        <!-- Graphique -->
        <!-- Conteneur principal pour les graphiques (barres ou camembert) et le message utilisateur. -->
        <!-- x:Name="GraphContainer" est utilisé pour l'export du graphique à barres. -->
        <Grid x:Name="GraphContainer" Grid.Row="3" Background="#FF1E1E1E">
            <!-- Graphique à barres pour visualiser les soldes des participants. -->
            <!-- Visible uniquement si le graphique des soldes est sélectionné. -->
            <lvc:CartesianChart x:Name="BarChart"
                            Series="{Binding BarSeries}"
                            AxisX="{Binding LabelsAxis}"
                            AxisY="{Binding YAxis}"
                            Background="White"
                            Foreground="Black"
                            Visibility="{Binding IsSoldeSelected, Converter={StaticResource BooleanToVisibilityConverter}}"
                            FontSize="12">
                <lvc:CartesianChart.Resources>
                    <Style TargetType="lvc:ColumnSeries">
                        <Setter Property="StrokeThickness" Value="2"/>
                        <Setter Property="DataLabels" Value="True"/>
                        <Setter Property="LabelPoint" Value="{Binding Y, StringFormat='{}{0:C}'}"/>
                        <Setter Property="FontSize" Value="12"/>
                    </Style>
                </lvc:CartesianChart.Resources>
            </lvc:CartesianChart>

            <!-- Conteneur spécifique pour le PieChart, utilisé pour l'export propre du camembert. -->
            <!-- Visible uniquement si le graphique des dépenses est sélectionné. -->
            <Grid x:Name="PieChartContainer" Visibility="{Binding IsDepenseSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                <!-- Graphique camembert pour visualiser la répartition des dépenses par participant. -->
                <lvc:PieChart x:Name="PieChart"
                          Series="{Binding PieSeries}"
                          LegendLocation="Bottom"
                          Hoverable="True"
                          InnerRadius="120"
                          Height="400"
                          Width="600"
                          AnimationsSpeed="0:0:0.7"
                          DisableAnimations="False"
                          DataClick="Chart_OnDataClick"
                          Background="#FF1E1E1E"
                          Foreground="White"
                          FontSize="12">
                    <lvc:PieChart.DataTooltip>
                        <!-- Style de l'info-bulle au survol des segments. -->
                        <lvc:DefaultTooltip Background="#333333" 
                                          Foreground="White"
                                          ShowTitle="True"
                                          ShowSeries="True"
                                          BorderThickness="0"
                                          CornerRadius="3"
                                          SelectionMode="SharedXValues"/>
                    </lvc:PieChart.DataTooltip>
                    <lvc:PieChart.ChartLegend>
                        <!-- Style de la légende du graphique camembert. -->
                        <lvc:DefaultLegend Background="Transparent" 
                                         Foreground="White" 
                                         BulletSize="12"
                                         Margin="0,20,0,0"
                                         Orientation="Horizontal"
                                         MaxWidth="600">
                            <lvc:DefaultLegend.FontSize>11</lvc:DefaultLegend.FontSize>
                        </lvc:DefaultLegend>
                    </lvc:PieChart.ChartLegend>
                    <lvc:PieChart.Resources>
                        <Style TargetType="lvc:PieSeries">
                            <Setter Property="StrokeThickness" Value="0"/>
                            <Setter Property="Stroke" Value="White"/>
                            <Setter Property="LabelPosition" Value="OutsideSlice"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="StrokeThickness" Value="2"/>
                                    <Setter Property="Stroke" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </lvc:PieChart.Resources>
                </lvc:PieChart>

                <!-- DataGrid pour afficher les dépenses individuelles du participant sélectionné -->
                <DataGrid x:Name="IndividualExpensesDataGrid"
                          ItemsSource="{Binding IndividualParticipantExpenses}"
                          AutoGenerateColumns="False"
                          IsReadOnly="True"
                          Visibility="{Binding IsIndividualExpensesVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                          Width="400"
                          Height="200"
                          HorizontalAlignment="Center">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="*"/>
                        <DataGridTextColumn Header="Montant" Binding="{Binding Montant, StringFormat='{}{0:N2} $'}" Width="Auto"/>
                        <DataGridTextColumn Header="Date" Binding="{Binding Date, StringFormat='{}{0:d}'}" Width="Auto"/>
                    </DataGrid.Columns>
                </DataGrid>

            </Grid>

            <!-- Message utilisateur -->
            <!-- Affiche un message (ex: "Veuillez sélectionner une activité") lorsque le graphique n'est pas affiché. -->
            <TextBlock Text="{Binding MessageGraphique}"
                       Foreground="White"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       TextWrapping="Wrap"
                       FontSize="14"
                       Margin="10"
                       Visibility="{Binding ActiviteSelectionnee, Converter={StaticResource NullToVisibilityConverter}}"/>
        </Grid>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,20,0">
            <!-- Affiche un résumé des données du graphique (soldes ou dépenses). -->
            <TextBlock Text="{Binding ResumeGraphique}"
                       FontStyle="Italic"
                       Foreground="Gray"
                       FontSize="12"
                       TextWrapping="Wrap"
                       VerticalAlignment="Center"/>
            <!-- Bouton pour masquer les détails individuels -->
            <Button Content="Masquer les détails"
                    Command="{Binding HideIndividualExpensesCommand}"
                    Visibility="{Binding IsIndividualExpensesVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                    VerticalAlignment="Center"
                    Margin="10,0,10,0"/>
            <!-- Bouton pour exporter le graphique actuellement affiché en image. -->
            <Button x:Name="ExportChartButton" Content="Exporter graphique"
                    Width="160"
                    Click="ExporterGraphique_Click"
                    VerticalAlignment="Center"/>
        </StackPanel>
    </Grid>
</UserControl>
