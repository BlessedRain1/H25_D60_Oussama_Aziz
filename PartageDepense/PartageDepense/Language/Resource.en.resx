<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Activités" xml:space="preserve">
    <value>Activities</value>
  </data>
  <data name="Ajouter" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Ajouter des participants" xml:space="preserve">
    <value>Add Participants</value>
  </data>
  <data name="Ajouter une activité" xml:space="preserve">
    <value>Add Activities</value>
  </data>
  <data name="Ajouter à l'activité" xml:space="preserve">
    <value>Add To Activity</value>
  </data>
  <data name="ANNULER" xml:space="preserve">
    <value>CANCEL</value>
  </data>
  <data name="Attribuer des dépenses" xml:space="preserve">
    <value>Assign Expenses</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Enregistrer une dépense" xml:space="preserve">
    <value>Register Expense</value>
  </data>
  <data name="Liste d'activités" xml:space="preserve">
    <value>Activities List</value>
  </data>
  <data name="Liste des dépenses" xml:space="preserve">
    <value>Expenses List</value>
  </data>
  <data name="Liste des participants" xml:space="preserve">
    <value>Participants List</value>
  </data>
  <data name="Nom Activité" xml:space="preserve">
    <value>Activity Name</value>
  </data>
  <data name="Nom participant" xml:space="preserve">
    <value>Particpant Name</value>
  </data>
  <data name="Nouvelle Activité" xml:space="preserve">
    <value>New Activity</value>
  </data>
  <data name="Opérations dans l'activité" xml:space="preserve">
    <value>Operations In The Activity</value>
  </data>
  <data name="Palette" xml:space="preserve">
    <value>Palette</value>
  </data>
  <data name="Partage des dépenses : Finance Canada" xml:space="preserve">
    <value>Sharing expenses: Finance Canada</value>
  </data>
  <data name="Participant" xml:space="preserve">
    <value>Participant</value>
  </data>
  <data name="Prénom :" xml:space="preserve">
    <value>First Name :</value>
  </data>
  <data name="Prénom participant" xml:space="preserve">
    <value>Participant First Name</value>
  </data>
  <data name="Supprimer" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Accepter" xml:space="preserve">
    <value>ACCEPT</value>
  </data>
  <data name="Sauvegarder" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Remboursements" xml:space="preserve">
    <value>Refunds</value>
  </data>
  <data name="Supprimer Activité" xml:space="preserve">
    <value>Delete Activity</value>
  </data>
  <data name="États des comptes" xml:space="preserve">
    <value>Account Statement</value>
  </data>
  <data name="Opérations Du Participants" xml:space="preserve">
    <value>Participant Operations</value>
  </data>
  <data name="Rembourser" xml:space="preserve">
    <value>Refund</value>
  </data>
  <data name="Récupérer" xml:space="preserve">
    <value>Get Back</value>
  </data>
  <data name="Participants" xml:space="preserve">
    <value>Participants</value>
  </data>
  <data name="Solde" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="État Du Solde" xml:space="preserve">
    <value>Balance Statement</value>
  </data>
  <data name="Montant" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="Description :" xml:space="preserve">
    <value>Description :</value>
  </data>
  <data name="Montant :" xml:space="preserve">
    <value>Amount :</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Date :" xml:space="preserve">
    <value>Date :</value>
  </data>
  <data name="Supprimer Une Dépense" xml:space="preserve">
    <value>Delete Expense</value>
  </data>
  <data name="Participants Disponibles" xml:space="preserve">
    <value>Available Participants</value>
  </data>
  <data name="Participants De l'Activité" xml:space="preserve">
    <value>Activity Participants</value>
  </data>
  <data name="Noms Participants" xml:space="preserve">
    <value>Participants Last Names</value>
  </data>
  <data name="Prénoms Participants" xml:space="preserve">
    <value>Participants First Names</value>
  </data>
  <data name="Ajouter Participant" xml:space="preserve">
    <value>Add Participant</value>
  </data>
  <data name="Retirer Participant" xml:space="preserve">
    <value>Withdraw Participant</value>
  </data>
  <data name="Thème de l'application" xml:space="preserve">
    <value>Application's Theme</value>
  </data>
  <data name="Couleur primaire" xml:space="preserve">
    <value>Primary color</value>
  </data>
  <data name="Couleur secondaire" xml:space="preserve">
    <value>Secondary color</value>
  </data>
  <data name="Type de graphique :" xml:space="preserve">
    <value>ChartType :</value>
  </data>
  <data name="Soldes par participant" xml:space="preserve">
    <value>BalanceByParticipant</value>
  </data>
  <data name="Dépenses par participant" xml:space="preserve">
    <value>ExpenseByParticipant</value>
  </data>
  <data name="Période :" xml:space="preserve">
    <value>Period :</value>
  </data>
  <data name="Trier par :" xml:space="preserve">
    <value>Sort By :</value>
  </data>
  <data name="Valeur" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Nom" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Croissant" xml:space="preserve">
    <value>Ascending</value>
  </data>
  <data name="Exporter graphique" xml:space="preserve">
    <value>Export Chart</value>
  </data>
  <data name="Nom :" xml:space="preserve">
    <value>Name :</value>
  </data>
  <data name="Sélectionnez une activité :" xml:space="preserve">
    <value>Select an Activity :</value>
  </data>
  <data name="Au :" xml:space="preserve">
    <value>To :</value>
  </data>
  <data name="Graphique" xml:space="preserve">
    <value>Graph</value>
  </data>
</root>